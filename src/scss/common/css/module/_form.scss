@charset "UTF-8";
@use "../define/variable" as var;
@use "../define/mixin" as *;
@use "sass:map";

@mixin next-sibling-gutter-form {
  & + * {
    margin-top: 16px;

    @include media-min {
      margin-top: 20px;
    }
  }
}

.m-form-select {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 8px;

  @include component-rule-gutter("S要素");
  @include next-sibling-gutter-form;

  @include media-min {
    max-width: 300px;
  }

  &::after {
    @include pseudo;
    @include create-arrow(8px, 8px, #000000, bottom, 2px);

    top: 0;
    right: 19px;
    bottom: 0;
    margin: auto 0;
    pointer-events: none;
  }

  &__select {
    flex-grow: 1;
    border: 1px solid var.$color-line;
    border-radius: 4px;
    padding: 12px 32px 12px 16px;
    appearance: none;
    background-color: transparent;
    color: var.$color-text;

    @include media-min {
      border-radius: 6px;
    }
  }
}

.m-form-input {
  display: flex;
  flex-direction: column;
  gap: 8px;

  @include component-rule-gutter("S要素");
  @include next-sibling-gutter-form;

  &__input {
    flex-grow: 1;
    border: 1px solid var.$color-line;
    border-radius: 4px;
    padding: 12px 16px;

    @include media-min {
      border-radius: 6px;
    }

    &--error {
      border: 1px solid var.$color-red !important;
      background-color: var.$color-red-02 !important;
    }
  }
}

.m-form-input-date {
  display: flex;
  align-items: center;

  @include component-rule-gutter("S要素");

  @include media-min {
    flex-wrap: nowrap;
  }

  &__between {
    font-weight: bold;
    padding: 0 4px;

    @include media-min {
      font-size: 1.8rem;
      padding: 0 16px;
    }
  }

  &__input {
    display: flex;
    width: 100%;
    color: var.$color-black;
    border: 1px solid var.$color-line;
    border-radius: 4px;
    padding: 12px 30px 12px 12px;
    background-color: #ffffff;

    @include media-min {
      border-radius: 6px;
      padding: 12px 46px 12px 16px;
    }

    @include media-max {
      // iOS等で日付が何も入力されていない場合に高さが縮むのでその対策
      min-height: 44px;
    }

    // Edge, Chromeのデフォルトカレンダーアイコンを消すとカレンダーUIにアクセスできないのでpositionで配置しておく
    &::-webkit-calendar-picker-indicator {
      position: absolute;
      top: 0;
      right: 16px;
      bottom: 0;
      margin: auto 0;
      opacity: 0;
    }

    &[disabled] {
      background-color: var.$color-bg-02;
    }
  }

  &__input-wrapper {
    position: relative;
    width: calc((100% - 22px) / 2);

    @include media-min {
      width: calc((100% - 50px) / 2);
    }

    &::after {
      @include pseudo;

      top: 0;
      right: 10px;
      bottom: 0;
      margin: auto 0;
      width: 20px;
      height: 20px;
      background-image: url("/common/img/icon_calendar.svg");
      background-repeat: no-repeat;
      background-size: contain;
      background-color: transparent;
      pointer-events: none;

      @include media-min {
        right: 16px;
      }
    }
  }
}

.m-form-radio {
  display: flex;
  flex-direction: column;
  gap: 16px 24px;

  @include component-rule-gutter("S要素");
  @include next-sibling-gutter-form;

  @include media-min {
    flex-flow: row wrap;
  }

  &__radio {
    @include visually-hidden;

    & + label {
      position: relative;
      display: flex;
      padding-left: 28px;

      &::before,
      &::after {
        @include pseudo;

        top: 0;
        left: 0;
        bottom: 0;
        margin: auto 0;
        border-radius: 50%;
      }

      &::before {
        width: 20px;
        height: 20px;
        border: 1px solid var.$color-line;
      }

      &::after {
        width: 10px;
        height: 10px;
        left: 5px;
        background-color: var.$color-green;
        opacity: 0;
      }
    }

    &:checked + label {
      &::after {
        opacity: 1;
      }
    }
  }

  &--grid {
    @include create-multi-column-grid(4, 2, null);

    &[data-col] {
      @include media-max {
        gap: 16px;
      }
    }

    &[data-col-wide] {
      @include media-min {
        gap: 16px 24px;
      }
    }
  }
}

.m-form-checkbox {
  display: flex;
  flex-direction: column;
  gap: 16px;

  @include component-rule-gutter("S要素");
  @include next-sibling-gutter-form;

  &__checkbox {
    @include visually-hidden;

    & + label {
      position: relative;
      display: flex;
      padding-left: 28px;

      &::before,
      &::after {
        @include pseudo;

        top: 0;
        left: 0;
        bottom: 0;
        margin: auto 0;
      }

      &::before {
        width: 20px;
        height: 20px;
        border-radius: 2px;
        border: 1px solid var.$color-line;
      }

      &::after {
        top: -3px;
        left: 4px;
        width: 11px;
        height: 7px;
        border-left: 2px solid #ffffff;
        border-bottom: 2px solid #ffffff;
        transform: rotate(-45deg);
      }
    }

    &:checked + label {
      &::before {
        background-color: var.$color-green;
        border-color: var.$color-green;
      }
    }
  }

  &--grid {
    @include create-multi-column-grid(4, 2, null);

    &[data-col] {
      @include media-max {
        gap: 16px;
      }
    }

    &[data-col-wide] {
      @include media-min {
        gap: 16px 24px;
      }
    }
  }
}

.m-form-lyt {
  @include component-rule-gutter("M要素");

  &__title,
  &__content {
    padding: 16px 0;

    @include media-min {
      padding: 24px 0;
    }
  }

  &__label {
    display: block;
    position: relative;
    padding-left: 14px;

    &::before {
      @include pseudo;

      top: calc(.5em - 3px);
      left: 0;
      width: 4px;
      height: 16px;
      background-color: var.$color-green;
    }
  }

  &__title {
    flex-shrink: 0;
    font-weight: bold;
    font-size: 1.4rem;

    @include media-min {
      font-size: 1.8rem;
    }

    @include media-max {
      padding-bottom: 0;
    }
  }

  &__content {
    flex-grow: 1;

    @include reset-inner-gutter;
  }

  &__item {
    display: flex;
    flex-direction: column;
    border-bottom: 1px dashed var.$color-line;

    @include media-min {
      flex-flow: row nowrap;
      gap: 24px;
    }

    &:first-child {
      .m-form-lyt {
        &__content {
          @include media-min {
            padding-top: 0;
          }
        }

        &__title {
          padding-top: 0;
        }
      }
    }
  }
}
